
%RML-environment interaction. Simulation of one subject (subID). Argument "arg" defines the environment
%type. Arg is generated by param_build*.m

function dat = kenntask_FVT(subID,arg,seed,optimization_pars,save_subject_data,W,We)

%Variables and data structure initialization%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%create a specific random stream for current workspace (for parallel batching)
rss = RandStream('mt19937ar','Seed',seed);
RandStream.setGlobalStream(rss);

nstate=arg.constAct.nstate;
BL=arg.BL;

%Shuffling the environments is not necessary, as all environments are the same
NTRI=BL*length(arg.SEN);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Start Experiment%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%create RML object%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
AccAct=RML(nstate,arg.nactions,arg.constAct);
AccActBuff=RML(nstate,arg.nactions,arg.constAct);
AccBoost=RML(nstate,arg.nactions_boost,arg.constBoost);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%initial weights
AccAct.V(1:nstate,:)=W;
AccActBuff.V=AccAct.V;
AccBoost.V(1:nstate,:)=We;

trial=1;%trials counter

% Rather then starting at the initial setstate, in order to make sure we
% have a suitable number of trials for each of the trials in each set, we
% start with the foraging decisions. Each block has two trials for each of
% the foraging decisions
start=repmat([arg.settingsenv.nsets+1:arg.settingsenv.nsets+arg.settingsenv.nsets*arg.settingsenv.ntrialsperset],1,NTRI/arg.settingsenv.nsets/arg.settingsenv.ntrialsperset);
% Shuffle the trials
start=start(randperm(NTRI));
dat = [];

for se=arg.SEN % For each environment
    for tri = 1:BL % For each trial
        %RML initialization
        
        startstate=start(trial);%start trial from state s
        
        % Run the single trial

        [dat_single_trial,AccAct,AccBoost] = Perform_RML_trial(arg,AccAct,AccBoost,optimization_pars,startstate);

        % Store the info from the trial in a data structure
        dat = store_single_trial_info(dat,dat_single_trial,trial);
                 
        %update trial counter
        trial=trial+1;
    
    end
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% End the experiment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end









